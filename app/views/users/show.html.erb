<div class="jumbotron"> 
  <h1><i>
    <% if @user.name %>
      <% if @user.name.split(//).last.downcase == "s" %>
       <%= @user.name %>&#8217; User Page
      <% else %>
        <%= @user.name %>&#8217;s User Page
      <% end %>
    <% else %>
      <%= @user.email %>
    <% end %>

  </i></h1>
 <!--MAIN BODY USER PROFILE INFORMATION -->
 <div class="user-show-nav">
  <ul class="nav nav-tabs">
        <li class="active"><a href="#bookmarks" data-toggle="tab">My YMarks</a></li>
        <li><a href="#liked-marks" data-toggle="tab">Liked YMarks</a></li>
  </ul>
</div>

<!-- Tab panes -->
  <div class="tab-content">
      <!--User Bookmarks -->
    <div class="tab-pane active" id="bookmarks"> 
      <!-- Find all topics associated with this User and iterate through each instance of a topic --> 
      <% @user.topics.each do |topic| %>
        <!-- set has_bookmarks variable to false -->
        <% has_bookmarks = false %>
        <!-- Now find all the bookmarks in this particular topic -->
        <% topic.bookmarks.each do |bookmark| %>
          <!-- if this topic instance has any bookmarks assoiated with it and the user
          also has the same bookmark associated with it in the database, set
          our has_bookmarks variable to true. 

          This will allow us to only show User topics which have bookmarks for a given User.
          A user may have created a bookmark hash topic but then deleted the associated bookmark
          at some point. 
          The topic category will not have been deleted as other users may have also associated bookmarks with this particular hash topic. So instead of deleting the hash, we just won't show it.
          -->
          <% has_bookmarks = true if @user.bookmarks.include?(bookmark) %>
        <% end %>
        <!-- show the Hash topic if there are relevant User bookmarks to show -->
        <% if has_bookmarks %>
          <h1 class="hash-topic user-show"><strong><%= link_to "##{topic.title}", topic_path(topic) %></strong></h1>
        <% end %>
        <!-- note that we are still in the Topic iteration at this point -->
        <% topic.bookmarks.each do |bookmark| %>
          <!-- Check to see if this bookmark has been associated with the current user.
               We need to check this because other users may have created topics with
               the same name. Topics are not User specific whereas Bookmarks are. For ex:
               Joe may have added a bookmark to a hash topic called Treats. Bill may have also added
               a seperate bookmark to the same Treats hash topic. Thus, if we were to retrieve all
               the bookmarks in the Treats hash, we would be getting bookmarks for both Joe
               and Bill. We only want Joes in this case. So we must also check for a user bookmark
               association -->
          <%= content_tag :p, id: "bookmark-#{bookmark.topic_ids.join("")}" do %>
            <% if current_user && @user.bookmarks.include?(bookmark) %>
                 <%= link_to bookmark.title, bookmark.url %>
                 <%= link_to "Edit", edit_bookmark_path(bookmark),  class: 'edit-button'%> | 
                 <%= link_to "Delete", bookmark_path(bookmark), method: :delete, remote: true, class: 'delete-button', confirm: 'Are you sure you want to delete this bookmark' %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </div>
    <!--User Liked Bookmarks -->
    <div class="tab-pane" id="liked-marks">
    </div> 
  </div>
</div>